package com.siriusif.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Workshift Entity CREATE TABLE "Workshifts" ( "id" INT NOT NULL, "dailyId" INT
 * NULL, "openedAt" DATETIME NOT NULL, "closedAt" DATETIME NULL, "DaySum" MONEY
 * NULL, );
 */

@Entity
@Table(name = "`workshifts`")
public class Workshift {

	public static final String CLOSED_AT = "`closedAt`";

	@Id
	@GeneratedValue(strategy = GenerationType.TABLE)
	private Long id;

	@Column(name = "`dailyId`", nullable = true)
	private int dailyId;

	@Column(name = "`workngDate`", nullable = false, columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP", insertable = false, updatable = false)
	@Temporal(TemporalType.DATE)
	private Date workingDate;

	@Column(name = "`openedAt`", nullable = false, columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP", insertable = false, updatable = false)
	@Temporal(TemporalType.DATE)
	private Date openedAt;

	@Column(name = CLOSED_AT, nullable = true, columnDefinition = "TIMESTAMP", insertable = false)
	@Temporal(TemporalType.DATE)
	private Date closedAt;

	@Column(name = "`daySum`", nullable = true, precision = 16, scale = 2)
	private BigDecimal daySum;

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "workShift")
	private List<Order> orders;

	public Workshift() {
		orders = new ArrayList<Order>();
	}

	public void addOrder(Order order) {
		order.setWorkShift(this);
		orders.add(order);
	}

	/* autogenerated stuff */

	public List<Order> getOrders() {
		return orders;
	}

	public void setOrders(List<Order> orders) {
		this.orders = orders;
		for (Order order : orders) {
			order.setWorkShift(this);
		}
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public int getDailyId() {
		return dailyId;
	}

	public void setDailyId(int dailyId) {
		this.dailyId = dailyId;
	}

	public Date getOpenedAt() {
		return openedAt;
	}

	public void setOpenedAt(Date openedAt) {
		this.openedAt = openedAt;
	}

	public Date getClosedAt() {
		return closedAt;
	}

	public void setClosedAt(Date closedAt) {
		this.closedAt = closedAt;
	}

	public BigDecimal getDaySum() {
		return daySum;
	}

	public void setDaySum(BigDecimal daySum) {
		this.daySum = daySum;
	}

	/**
	 * @return the workingDate
	 */
	public Date getWorkingDate() {
		return workingDate;
	}

	/**
	 * @param workingDate
	 *            the workingDate to set
	 */
	public void setWorkingDate(Date workingDate) {
		this.workingDate = workingDate;
	}
}
